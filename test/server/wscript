import os
from waflib.extras.layout import Product, Component

def name(context):
    return os.path.basename(str(context.path))

def configure(confCtx):
    confCtx.env.component = Component.fromContext(confCtx, name(confCtx), confCtx.env.product)
    confCtx.env.product.addComponent(confCtx.env.component)

def build(buildCtx):
    buildCtx.env.component = buildCtx.env.product.getComponent(name(buildCtx))
    buildCtx.program(
	    name='exe_event_test',
	    source=[buildCtx.path.find_node('event_test.cxx'),
                    buildCtx.path.find_node('test_utility.cxx')],
	    target=os.path.join(buildCtx.env.component.build_tree.testPathFromBuild(buildCtx), 'event_test'),
	    defines=['GTEST_HAS_PTHREAD=1'],
	    includes=['.'] + buildCtx.env.component.include_path_list,
	    cxxflags=buildCtx.env.CXXFLAGS,
	    linkflags=buildCtx.env.LDFLAGS,
	    use=['GTEST_STLIB',
		    'TURBO_SHLIB',
		    'ASIO_SHLIB',
		    'CAPNPROTO_SHLIB',
		    'ENET_SHLIB',
		    'BEAM_SHLIB',
		    'stlib_robocup2Dsim_common',
		    'stlib_robocup2Dsim_server'],
	    libpath=['.'] + buildCtx.env.component.lib_path_list,
	    rpath=buildCtx.env.component.rpath_list,
	    install_path=None,
	    after=['stlib_robocup2Dsim_common', 'stlib_robocup2Dsim_server'])
    buildCtx.program(
	    name='exe_roster_test',
	    source=[buildCtx.path.find_node('roster_test.cxx'),
                    buildCtx.path.find_node('test_utility.cxx')],
	    target=os.path.join(buildCtx.env.component.build_tree.testPathFromBuild(buildCtx), 'roster_test'),
	    defines=['GTEST_HAS_PTHREAD=1'],
	    includes=['.'] + buildCtx.env.component.include_path_list,
	    cxxflags=buildCtx.env.CXXFLAGS,
	    linkflags=buildCtx.env.LDFLAGS,
	    use=['GTEST_STLIB',
		    'TURBO_SHLIB',
		    'ASIO_SHLIB',
		    'CAPNPROTO_SHLIB',
		    'ENET_SHLIB',
		    'BEAM_SHLIB',
		    'stlib_robocup2Dsim_common',
		    'stlib_robocup2Dsim_server'],
	    libpath=['.'] + buildCtx.env.component.lib_path_list,
	    rpath=buildCtx.env.component.rpath_list,
	    install_path=None,
	    after=['stlib_robocup2Dsim_common', 'stlib_robocup2Dsim_server'])
